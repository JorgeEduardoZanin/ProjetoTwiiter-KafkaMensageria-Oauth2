/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package project.spring.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class CartaoCreditoRequest extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 4422635447852466986L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"CartaoCreditoRequest\",\"namespace\":\"project.spring.avro\",\"fields\":[{\"name\":\"nomeCartao\",\"type\":\"string\"},{\"name\":\"numeroCartao\",\"type\":\"string\"},{\"name\":\"mesExpiracao\",\"type\":\"string\"},{\"name\":\"anoExpiracao\",\"type\":\"string\"},{\"name\":\"ccv\",\"type\":\"string\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<CartaoCreditoRequest> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<CartaoCreditoRequest> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<CartaoCreditoRequest> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<CartaoCreditoRequest> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<CartaoCreditoRequest> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this CartaoCreditoRequest to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a CartaoCreditoRequest from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a CartaoCreditoRequest instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static CartaoCreditoRequest fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.CharSequence nomeCartao;
  private java.lang.CharSequence numeroCartao;
  private java.lang.CharSequence mesExpiracao;
  private java.lang.CharSequence anoExpiracao;
  private java.lang.CharSequence ccv;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public CartaoCreditoRequest() {}

  /**
   * All-args constructor.
   * @param nomeCartao The new value for nomeCartao
   * @param numeroCartao The new value for numeroCartao
   * @param mesExpiracao The new value for mesExpiracao
   * @param anoExpiracao The new value for anoExpiracao
   * @param ccv The new value for ccv
   */
  public CartaoCreditoRequest(java.lang.CharSequence nomeCartao, java.lang.CharSequence numeroCartao, java.lang.CharSequence mesExpiracao, java.lang.CharSequence anoExpiracao, java.lang.CharSequence ccv) {
    this.nomeCartao = nomeCartao;
    this.numeroCartao = numeroCartao;
    this.mesExpiracao = mesExpiracao;
    this.anoExpiracao = anoExpiracao;
    this.ccv = ccv;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return nomeCartao;
    case 1: return numeroCartao;
    case 2: return mesExpiracao;
    case 3: return anoExpiracao;
    case 4: return ccv;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: nomeCartao = (java.lang.CharSequence)value$; break;
    case 1: numeroCartao = (java.lang.CharSequence)value$; break;
    case 2: mesExpiracao = (java.lang.CharSequence)value$; break;
    case 3: anoExpiracao = (java.lang.CharSequence)value$; break;
    case 4: ccv = (java.lang.CharSequence)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'nomeCartao' field.
   * @return The value of the 'nomeCartao' field.
   */
  public java.lang.CharSequence getNomeCartao() {
    return nomeCartao;
  }


  /**
   * Sets the value of the 'nomeCartao' field.
   * @param value the value to set.
   */
  public void setNomeCartao(java.lang.CharSequence value) {
    this.nomeCartao = value;
  }

  /**
   * Gets the value of the 'numeroCartao' field.
   * @return The value of the 'numeroCartao' field.
   */
  public java.lang.CharSequence getNumeroCartao() {
    return numeroCartao;
  }


  /**
   * Sets the value of the 'numeroCartao' field.
   * @param value the value to set.
   */
  public void setNumeroCartao(java.lang.CharSequence value) {
    this.numeroCartao = value;
  }

  /**
   * Gets the value of the 'mesExpiracao' field.
   * @return The value of the 'mesExpiracao' field.
   */
  public java.lang.CharSequence getMesExpiracao() {
    return mesExpiracao;
  }


  /**
   * Sets the value of the 'mesExpiracao' field.
   * @param value the value to set.
   */
  public void setMesExpiracao(java.lang.CharSequence value) {
    this.mesExpiracao = value;
  }

  /**
   * Gets the value of the 'anoExpiracao' field.
   * @return The value of the 'anoExpiracao' field.
   */
  public java.lang.CharSequence getAnoExpiracao() {
    return anoExpiracao;
  }


  /**
   * Sets the value of the 'anoExpiracao' field.
   * @param value the value to set.
   */
  public void setAnoExpiracao(java.lang.CharSequence value) {
    this.anoExpiracao = value;
  }

  /**
   * Gets the value of the 'ccv' field.
   * @return The value of the 'ccv' field.
   */
  public java.lang.CharSequence getCcv() {
    return ccv;
  }


  /**
   * Sets the value of the 'ccv' field.
   * @param value the value to set.
   */
  public void setCcv(java.lang.CharSequence value) {
    this.ccv = value;
  }

  /**
   * Creates a new CartaoCreditoRequest RecordBuilder.
   * @return A new CartaoCreditoRequest RecordBuilder
   */
  public static project.spring.avro.CartaoCreditoRequest.Builder newBuilder() {
    return new project.spring.avro.CartaoCreditoRequest.Builder();
  }

  /**
   * Creates a new CartaoCreditoRequest RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new CartaoCreditoRequest RecordBuilder
   */
  public static project.spring.avro.CartaoCreditoRequest.Builder newBuilder(project.spring.avro.CartaoCreditoRequest.Builder other) {
    if (other == null) {
      return new project.spring.avro.CartaoCreditoRequest.Builder();
    } else {
      return new project.spring.avro.CartaoCreditoRequest.Builder(other);
    }
  }

  /**
   * Creates a new CartaoCreditoRequest RecordBuilder by copying an existing CartaoCreditoRequest instance.
   * @param other The existing instance to copy.
   * @return A new CartaoCreditoRequest RecordBuilder
   */
  public static project.spring.avro.CartaoCreditoRequest.Builder newBuilder(project.spring.avro.CartaoCreditoRequest other) {
    if (other == null) {
      return new project.spring.avro.CartaoCreditoRequest.Builder();
    } else {
      return new project.spring.avro.CartaoCreditoRequest.Builder(other);
    }
  }

  /**
   * RecordBuilder for CartaoCreditoRequest instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<CartaoCreditoRequest>
    implements org.apache.avro.data.RecordBuilder<CartaoCreditoRequest> {

    private java.lang.CharSequence nomeCartao;
    private java.lang.CharSequence numeroCartao;
    private java.lang.CharSequence mesExpiracao;
    private java.lang.CharSequence anoExpiracao;
    private java.lang.CharSequence ccv;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(project.spring.avro.CartaoCreditoRequest.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.nomeCartao)) {
        this.nomeCartao = data().deepCopy(fields()[0].schema(), other.nomeCartao);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.numeroCartao)) {
        this.numeroCartao = data().deepCopy(fields()[1].schema(), other.numeroCartao);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.mesExpiracao)) {
        this.mesExpiracao = data().deepCopy(fields()[2].schema(), other.mesExpiracao);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.anoExpiracao)) {
        this.anoExpiracao = data().deepCopy(fields()[3].schema(), other.anoExpiracao);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.ccv)) {
        this.ccv = data().deepCopy(fields()[4].schema(), other.ccv);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
    }

    /**
     * Creates a Builder by copying an existing CartaoCreditoRequest instance
     * @param other The existing instance to copy.
     */
    private Builder(project.spring.avro.CartaoCreditoRequest other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.nomeCartao)) {
        this.nomeCartao = data().deepCopy(fields()[0].schema(), other.nomeCartao);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.numeroCartao)) {
        this.numeroCartao = data().deepCopy(fields()[1].schema(), other.numeroCartao);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.mesExpiracao)) {
        this.mesExpiracao = data().deepCopy(fields()[2].schema(), other.mesExpiracao);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.anoExpiracao)) {
        this.anoExpiracao = data().deepCopy(fields()[3].schema(), other.anoExpiracao);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.ccv)) {
        this.ccv = data().deepCopy(fields()[4].schema(), other.ccv);
        fieldSetFlags()[4] = true;
      }
    }

    /**
      * Gets the value of the 'nomeCartao' field.
      * @return The value.
      */
    public java.lang.CharSequence getNomeCartao() {
      return nomeCartao;
    }


    /**
      * Sets the value of the 'nomeCartao' field.
      * @param value The value of 'nomeCartao'.
      * @return This builder.
      */
    public project.spring.avro.CartaoCreditoRequest.Builder setNomeCartao(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.nomeCartao = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'nomeCartao' field has been set.
      * @return True if the 'nomeCartao' field has been set, false otherwise.
      */
    public boolean hasNomeCartao() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'nomeCartao' field.
      * @return This builder.
      */
    public project.spring.avro.CartaoCreditoRequest.Builder clearNomeCartao() {
      nomeCartao = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'numeroCartao' field.
      * @return The value.
      */
    public java.lang.CharSequence getNumeroCartao() {
      return numeroCartao;
    }


    /**
      * Sets the value of the 'numeroCartao' field.
      * @param value The value of 'numeroCartao'.
      * @return This builder.
      */
    public project.spring.avro.CartaoCreditoRequest.Builder setNumeroCartao(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.numeroCartao = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'numeroCartao' field has been set.
      * @return True if the 'numeroCartao' field has been set, false otherwise.
      */
    public boolean hasNumeroCartao() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'numeroCartao' field.
      * @return This builder.
      */
    public project.spring.avro.CartaoCreditoRequest.Builder clearNumeroCartao() {
      numeroCartao = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'mesExpiracao' field.
      * @return The value.
      */
    public java.lang.CharSequence getMesExpiracao() {
      return mesExpiracao;
    }


    /**
      * Sets the value of the 'mesExpiracao' field.
      * @param value The value of 'mesExpiracao'.
      * @return This builder.
      */
    public project.spring.avro.CartaoCreditoRequest.Builder setMesExpiracao(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.mesExpiracao = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'mesExpiracao' field has been set.
      * @return True if the 'mesExpiracao' field has been set, false otherwise.
      */
    public boolean hasMesExpiracao() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'mesExpiracao' field.
      * @return This builder.
      */
    public project.spring.avro.CartaoCreditoRequest.Builder clearMesExpiracao() {
      mesExpiracao = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'anoExpiracao' field.
      * @return The value.
      */
    public java.lang.CharSequence getAnoExpiracao() {
      return anoExpiracao;
    }


    /**
      * Sets the value of the 'anoExpiracao' field.
      * @param value The value of 'anoExpiracao'.
      * @return This builder.
      */
    public project.spring.avro.CartaoCreditoRequest.Builder setAnoExpiracao(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.anoExpiracao = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'anoExpiracao' field has been set.
      * @return True if the 'anoExpiracao' field has been set, false otherwise.
      */
    public boolean hasAnoExpiracao() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'anoExpiracao' field.
      * @return This builder.
      */
    public project.spring.avro.CartaoCreditoRequest.Builder clearAnoExpiracao() {
      anoExpiracao = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'ccv' field.
      * @return The value.
      */
    public java.lang.CharSequence getCcv() {
      return ccv;
    }


    /**
      * Sets the value of the 'ccv' field.
      * @param value The value of 'ccv'.
      * @return This builder.
      */
    public project.spring.avro.CartaoCreditoRequest.Builder setCcv(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.ccv = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'ccv' field has been set.
      * @return True if the 'ccv' field has been set, false otherwise.
      */
    public boolean hasCcv() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'ccv' field.
      * @return This builder.
      */
    public project.spring.avro.CartaoCreditoRequest.Builder clearCcv() {
      ccv = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public CartaoCreditoRequest build() {
      try {
        CartaoCreditoRequest record = new CartaoCreditoRequest();
        record.nomeCartao = fieldSetFlags()[0] ? this.nomeCartao : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.numeroCartao = fieldSetFlags()[1] ? this.numeroCartao : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.mesExpiracao = fieldSetFlags()[2] ? this.mesExpiracao : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.anoExpiracao = fieldSetFlags()[3] ? this.anoExpiracao : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.ccv = fieldSetFlags()[4] ? this.ccv : (java.lang.CharSequence) defaultValue(fields()[4]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<CartaoCreditoRequest>
    WRITER$ = (org.apache.avro.io.DatumWriter<CartaoCreditoRequest>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<CartaoCreditoRequest>
    READER$ = (org.apache.avro.io.DatumReader<CartaoCreditoRequest>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.nomeCartao);

    out.writeString(this.numeroCartao);

    out.writeString(this.mesExpiracao);

    out.writeString(this.anoExpiracao);

    out.writeString(this.ccv);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.nomeCartao = in.readString(this.nomeCartao instanceof Utf8 ? (Utf8)this.nomeCartao : null);

      this.numeroCartao = in.readString(this.numeroCartao instanceof Utf8 ? (Utf8)this.numeroCartao : null);

      this.mesExpiracao = in.readString(this.mesExpiracao instanceof Utf8 ? (Utf8)this.mesExpiracao : null);

      this.anoExpiracao = in.readString(this.anoExpiracao instanceof Utf8 ? (Utf8)this.anoExpiracao : null);

      this.ccv = in.readString(this.ccv instanceof Utf8 ? (Utf8)this.ccv : null);

    } else {
      for (int i = 0; i < 5; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.nomeCartao = in.readString(this.nomeCartao instanceof Utf8 ? (Utf8)this.nomeCartao : null);
          break;

        case 1:
          this.numeroCartao = in.readString(this.numeroCartao instanceof Utf8 ? (Utf8)this.numeroCartao : null);
          break;

        case 2:
          this.mesExpiracao = in.readString(this.mesExpiracao instanceof Utf8 ? (Utf8)this.mesExpiracao : null);
          break;

        case 3:
          this.anoExpiracao = in.readString(this.anoExpiracao instanceof Utf8 ? (Utf8)this.anoExpiracao : null);
          break;

        case 4:
          this.ccv = in.readString(this.ccv instanceof Utf8 ? (Utf8)this.ccv : null);
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










